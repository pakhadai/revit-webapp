#!/usr/bin/env python3
"""
–î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤
–ó–∞–ø—É—Å—Ç—ñ—Ç—å –π–æ–≥–æ –≤ –ø–∞–ø—Ü—ñ backend: python test_promo.py
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –≤ —à–ª—è—Ö
sys.path.insert(0, str(Path(__file__).parent))


async def test_promo_codes():
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–¥—É–ª—è –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤...")

    # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–º–ø–æ—Ä—Ç—ñ–≤
    try:
        from api import promo_codes
        print("‚úÖ –ú–æ–¥—É–ª—å promo_codes —É—Å–ø—ñ—à–Ω–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É promo_codes: {e}")
        return

    # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–æ–¥–µ–ª—ñ
    try:
        from models.promo_code import PromoCode, DiscountType
        print("‚úÖ –ú–æ–¥–µ–ª—å PromoCode –∑–Ω–∞–π–¥–µ–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥–µ–ª—ñ PromoCode: {e}")
        print("   –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ–∞–π–ª backend/models/promo_code.py")
        return

    # 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
    try:
        print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ –≤ promo_codes.router:")
        for route in promo_codes.router.routes:
            if hasattr(route, 'path'):
                print(f"   - {route.methods} {route.path}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ—É—Ç–µ—Ä–∞: {e}")

    # 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
    try:
        from database import engine, Base
        from sqlalchemy import inspect

        async with engine.connect() as conn:
            def check_tables(connection):
                inspector = inspect(connection)
                tables = inspector.get_table_names()

                if 'promo_codes' in tables:
                    print("‚úÖ –¢–∞–±–ª–∏—Ü—è promo_codes —ñ—Å–Ω—É—î –≤ –ë–î")
                    columns = [col['name'] for col in inspector.get_columns('promo_codes')]
                    print(f"   –ö–æ–ª–æ–Ω–∫–∏: {', '.join(columns)}")
                else:
                    print("‚ùå –¢–∞–±–ª–∏—Ü—è promo_codes –ù–ï —ñ—Å–Ω—É—î –≤ –ë–î")
                    print("   –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –º—ñ–≥—Ä–∞—Ü—ñ—é –∞–±–æ –ø–µ—Ä–µ—Å—Ç–≤–æ—Ä–∏—Ç–∏ –ë–î")

                return 'promo_codes' in tables

            table_exists = await conn.run_sync(check_tables)

            if not table_exists:
                print("\nüí° –°–ø—Ä–æ–±—É–π—Ç–µ:")
                print("   1. –í–∏–¥–∞–ª—ñ—Ç—å —Ñ–∞–π–ª database/database.db")
                print("   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä - —Ç–∞–±–ª–∏—Ü—ñ —Å—Ç–≤–æ—Ä—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ë–î: {e}")

    print("\nüìå –§—ñ–Ω–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞:")
    print("   1. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ: uvicorn main:app --reload --port 8001")
    print("   2. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ: http://localhost:8001/api/promo-codes/")
    print("   3. –Ø–∫—â–æ 401 Unauthorized - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ–Ω–¥–ø–æ—ñ–Ω—Ç –ø—Ä–∞—Ü—é—î")
    print("   4. –Ø–∫—â–æ 404 Not Found - –ø—Ä–æ–±–ª–µ–º–∞ –∑ —Ä–æ—É—Ç–∏–Ω–≥–æ–º")


if __name__ == "__main__":
    asyncio.run(test_promo_codes())