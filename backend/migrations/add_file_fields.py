#!/usr/bin/env python3
"""
–ú—ñ–≥—Ä–∞—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—ñ–≤ —Ñ–∞–π–ª—ñ–≤
–ó–∞–ø—É—Å—Ç—ñ—Ç—å: python migrations/add_file_fields.py
"""

import asyncio
from sqlalchemy import text
from database import engine


async def migrate():
    async with engine.begin() as conn:
        print("üîÑ –ü–æ—á–∏–Ω–∞—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—é...")

        # –î–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –∫–æ–ª–æ–Ω–∫–∏
        try:
            await conn.execute(text("""
                ALTER TABLE archives ADD COLUMN IF NOT EXISTS image_paths JSON DEFAULT '[]';
            """))
            print("‚úÖ –î–æ–¥–∞–Ω–æ –ø–æ–ª–µ image_paths")
        except Exception as e:
            print(f"‚ö†Ô∏è image_paths –º–æ–∂–ª–∏–≤–æ –≤–∂–µ —ñ—Å–Ω—É—î: {e}")

        try:
            await conn.execute(text("""
                ALTER TABLE archives ADD COLUMN IF NOT EXISTS file_path TEXT;
            """))
            print("‚úÖ –î–æ–¥–∞–Ω–æ –ø–æ–ª–µ file_path")
        except Exception as e:
            print(f"‚ö†Ô∏è file_path –º–æ–∂–ª–∏–≤–æ –≤–∂–µ —ñ—Å–Ω—É—î: {e}")

        try:
            await conn.execute(text("""
                ALTER TABLE archives ADD COLUMN IF NOT EXISTS file_size INTEGER;
            """))
            print("‚úÖ –î–æ–¥–∞–Ω–æ –ø–æ–ª–µ file_size")
        except Exception as e:
            print(f"‚ö†Ô∏è file_size –º–æ–∂–ª–∏–≤–æ –≤–∂–µ —ñ—Å–Ω—É—î: {e}")

        # –ú—ñ–≥—Ä—É—î–º–æ —Å—Ç–∞—Ä—ñ –¥–∞–Ω—ñ
        try:
            await conn.execute(text("""
                UPDATE archives 
                SET image_paths = json_array(image_path) 
                WHERE image_path IS NOT NULL AND image_paths = '[]';
            """))
            print("‚úÖ –ú—ñ–≥—Ä–æ–≤–∞–Ω–æ —Å—Ç–∞—Ä—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        except Exception as e:
            print(f"‚ÑπÔ∏è –ú—ñ–≥—Ä–∞—Ü—ñ—è —Å—Ç–∞—Ä–∏—Ö –¥–∞–Ω–∏—Ö: {e}")

        print("‚ú® –ú—ñ–≥—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    asyncio.run(migrate())
    