"""Add marketplace and user settings

Revision ID: b2b8bdd8fdaf
Revises: 
Create Date: 2025-08-14 21:29:36.487265

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b2b8bdd8fdaf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('developer_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=200), nullable=True),
    sa.Column('portfolio_url', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('specialization', sa.JSON(), nullable=True),
    sa.Column('contact_email', sa.String(length=200), nullable=True),
    sa.Column('contact_phone', sa.String(length=50), nullable=True),
    sa.Column('contact_telegram', sa.String(length=100), nullable=True),
    sa.Column('documents', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('NONE', 'PENDING', 'APPROVED', 'REJECTED', 'SUSPENDED', name='developerstatus'), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('commission_rate', sa.Float(), nullable=True),
    sa.Column('accepted_terms', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('developer_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('banner_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('specializations', sa.JSON(), nullable=True),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('social_links', sa.JSON(), nullable=True),
    sa.Column('total_products', sa.Integer(), nullable=True),
    sa.Column('total_sales', sa.Integer(), nullable=True),
    sa.Column('total_revenue', sa.Float(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('total_earned', sa.Float(), nullable=True),
    sa.Column('total_withdrawn', sa.Float(), nullable=True),
    sa.Column('commission_rate', sa.Float(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('NONE', 'PENDING', 'APPROVED', 'REJECTED', 'SUSPENDED', name='developerstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_payout_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('developer_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('unique_visitors', sa.Integer(), nullable=True),
    sa.Column('sales', sa.Integer(), nullable=True),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('add_to_cart', sa.Integer(), nullable=True),
    sa.Column('checkout_started', sa.Integer(), nullable=True),
    sa.Column('product_metrics', sa.JSON(), nullable=True),
    sa.Column('traffic_sources', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('developer_withdrawals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_details', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='withdrawalstatus'), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('processed_by', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.String(length=200), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('requested_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer_profiles.id'], ),
    sa.ForeignKeyConstraint(['processed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marketplace_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('archive_id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING_REVIEW', 'APPROVED', 'REJECTED', 'SUSPENDED', 'ARCHIVED', name='productstatus'), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by', sa.Integer(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('sale_count', sa.Integer(), nullable=True),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('meta_title', sa.String(length=200), nullable=True),
    sa.Column('meta_description', sa.Text(), nullable=True),
    sa.Column('meta_keywords', sa.JSON(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('featured_until', sa.DateTime(), nullable=True),
    sa.Column('promo_video_url', sa.String(length=500), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('changelog', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['archive_id'], ['archives.id'], ),
    sa.ForeignKeyConstraint(['developer_id'], ['developer_profiles.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marketplace_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('SALE', 'COMMISSION', 'WITHDRAWAL', 'REFUND', 'ADJUSTMENT', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference_id', sa.String(length=100), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('commission_amount', sa.Float(), nullable=True),
    sa.Column('developer_amount', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer_profiles.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['marketplace_products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('helpful_count', sa.Integer(), nullable=True),
    sa.Column('not_helpful_count', sa.Integer(), nullable=True),
    sa.Column('developer_response', sa.Text(), nullable=True),
    sa.Column('developer_response_at', sa.DateTime(), nullable=True),
    sa.Column('is_verified_purchase', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('is_hidden', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['marketplace_products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('notify_new_archives', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('notify_promotions', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('notify_bonuses', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('notify_order_status', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('notify_subscription_expiry', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('theme', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('compact_view', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('show_prices_with_vat', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('profile_visibility', sa.String(length=20), nullable=True))
    op.add_column('users', sa.Column('show_purchase_history', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('allow_friend_requests', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('display_name', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('country', sa.String(length=2), nullable=True))
    op.add_column('users', sa.Column('timezone', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('phone_verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('two_factor_enabled', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('last_settings_update', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'last_settings_update')
    op.drop_column('users', 'two_factor_enabled')
    op.drop_column('users', 'phone_verified')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'country')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'display_name')
    op.drop_column('users', 'allow_friend_requests')
    op.drop_column('users', 'show_purchase_history')
    op.drop_column('users', 'profile_visibility')
    op.drop_column('users', 'show_prices_with_vat')
    op.drop_column('users', 'compact_view')
    op.drop_column('users', 'theme')
    op.drop_column('users', 'notify_subscription_expiry')
    op.drop_column('users', 'notify_order_status')
    op.drop_column('users', 'notify_bonuses')
    op.drop_column('users', 'notify_promotions')
    op.drop_column('users', 'notify_new_archives')
    op.drop_table('product_reviews')
    op.drop_table('marketplace_transactions')
    op.drop_table('marketplace_products')
    op.drop_table('developer_withdrawals')
    op.drop_table('developer_analytics')
    op.drop_table('developer_profiles')
    op.drop_table('developer_applications')
    # ### end Alembic commands ###
