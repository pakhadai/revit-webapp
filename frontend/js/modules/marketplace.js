// frontend/js/modules/marketplace.js
/**
 * –ú–æ–¥—É–ª—å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É –¥–ª—è —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤
 */

window.MarketplaceModule = {
    currentTab: 'overview',
    developerProfile: null,
    products: [],
    transactions: [],

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è
    async init(app) {
        this.app = app;
        await this.checkDeveloperStatus();
    },

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
    async checkDeveloperStatus() {
        try {
            const status = await this.app.api.get('/api/marketplace/application/status');
            this.applicationStatus = status.status;

            if (status.status === 'approved') {
                this.developerProfile = await this.app.api.get('/api/marketplace/profile');
            }

            return status;
        } catch (error) {
            console.error('Error checking developer status:', error);
            return { status: 'none' };
        }
    },

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—É
    async showMarketplace(app) {
        const content = document.getElementById('app-content');
        const status = await this.checkDeveloperStatus();

        if (status.status === 'none') {
            this.showApplicationForm(app);
        } else if (status.status === 'pending') {
            this.showPendingStatus(app);
        } else if (status.status === 'rejected') {
            this.showRejectedStatus(app, status);
        } else if (status.status === 'approved') {
            this.showDeveloperDashboard(app);
        }
    },

    // –§–æ—Ä–º–∞ –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–∫–∏
    showApplicationForm(app) {
        const content = document.getElementById('app-content');

        content.innerHTML = `
            <div class="marketplace-application">
                <div class="application-header">
                    <h1>üöÄ –°—Ç–∞–Ω—å—Ç–µ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–æ–º RevitBot</h1>
                    <p>–ü—Ä–æ–¥–∞–≤–∞–π—Ç–µ —Å–≤–æ—ó Revit —Å—ñ–º–µ–π—Å—Ç–≤–∞ –º—ñ–ª—å–π–æ–Ω–∞–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤</p>
                </div>

                <div class="benefits-grid">
                    <div class="benefit-card">
                        <div class="benefit-icon">üí∞</div>
                        <h3>70% –≤—ñ–¥ –ø—Ä–æ–¥–∞–∂—ñ–≤</h3>
                        <p>–û—Ç—Ä–∏–º—É–π—Ç–µ –¥–æ 70% –≤—ñ–¥ –∫–æ–∂–Ω–æ–≥–æ –ø—Ä–æ–¥–∞–∂—É</p>
                    </div>
                    <div class="benefit-card">
                        <div class="benefit-icon">üåç</div>
                        <h3>–ì–ª–æ–±–∞–ª—å–Ω–∞ –∞—É–¥–∏—Ç–æ—Ä—ñ—è</h3>
                        <p>–î–æ—Å—Ç—É–ø –¥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —É—Å—å–æ–≥–æ —Å–≤—ñ—Ç—É</p>
                    </div>
                    <div class="benefit-card">
                        <div class="benefit-icon">üìä</div>
                        <h3>–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞</h3>
                        <p>–î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂—ñ–≤</p>
                    </div>
                    <div class="benefit-card">
                        <div class="benefit-icon">üõ°Ô∏è</div>
                        <h3>–ó–∞—Ö–∏—Å—Ç –∫–æ–Ω—Ç–µ–Ω—Ç—É</h3>
                        <p>–í–∞—à—ñ —Ñ–∞–π–ª–∏ –ø—ñ–¥ –Ω–∞–¥—ñ–π–Ω–∏–º –∑–∞—Ö–∏—Å—Ç–æ–º</p>
                    </div>
                </div>

                <form id="developer-application-form" class="application-form">
                    <h2>–ó–∞—è–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞</h2>

                    <div class="form-section">
                        <h3>–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h3>

                        <div class="form-group">
                            <label>–ù–∞–∑–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—ó (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)</label>
                            <input type="text" id="company_name" placeholder="–í–∞—à–∞ –∫–æ–º–ø–∞–Ω—ñ—è –∞–±–æ –±—Ä–µ–Ω–¥">
                        </div>

                        <div class="form-group">
                            <label>–ü–æ—Ä—Ç—Ñ–æ–ª—ñ–æ *</label>
                            <input type="url" id="portfolio_url" required placeholder="https://your-portfolio.com">
                        </div>

                        <div class="form-group">
                            <label>–û–ø–∏—Å –≤–∞—à–æ–≥–æ –¥–æ—Å–≤—ñ–¥—É *</label>
                            <textarea id="description" required rows="5" minlength="100"
                                placeholder="–†–æ–∑–∫–∞–∂—ñ—Ç—å –ø—Ä–æ –≤–∞—à –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ Revit, —Å—Ç–≤–æ—Ä–µ–Ω—ñ –ø—Ä–æ–µ–∫—Ç–∏, —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é..."></textarea>
                            <div class="char-count">–ú—ñ–Ω—ñ–º—É–º 100 —Å–∏–º–≤–æ–ª—ñ–≤</div>
                        </div>
                    </div>

                    <div class="form-section">
                        <h3>–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è</h3>
                        <div class="specialization-grid">
                            <label class="checkbox-label">
                                <input type="checkbox" name="specialization" value="architecture">
                                <span>üè¢ –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" name="specialization" value="furniture">
                                <span>ü™ë –ú–µ–±–ª—ñ</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" name="specialization" value="plumbing">
                                <span>üöø –°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫–∞</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" name="specialization" value="electrical">
                                <span>‚ö° –ï–ª–µ–∫—Ç—Ä–∏–∫–∞</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" name="specialization" value="hvac">
                                <span>‚ùÑÔ∏è –í–µ–Ω—Ç–∏–ª—è—Ü—ñ—è</span>
                            </label>
                            <label class="checkbox-label">
                                <input type="checkbox" name="specialization" value="structural">
                                <span>üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó</span>
                            </label>
                        </div>
                    </div>

                    <div class="form-section">
                        <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h3>

                        <div class="form-group">
                            <label>Email *</label>
                            <input type="email" id="contact_email" required placeholder="your@email.com">
                        </div>

                        <div class="form-group">
                            <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                            <input type="tel" id="contact_phone" placeholder="+380...">
                        </div>

                        <div class="form-group">
                            <label>Telegram</label>
                            <input type="text" id="contact_telegram" placeholder="@username">
                        </div>
                    </div>

                    <div class="form-section">
                        <label class="checkbox-label">
                            <input type="checkbox" id="accepted_terms" required>
                            <span>–Ø –ø–æ–≥–æ–¥–∂—É—é—Å—å –∑ <a href="#" onclick="MarketplaceModule.showTerms()">—É–º–æ–≤–∞–º–∏ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ</a></span>
                        </label>
                    </div>

                    <button type="submit" class="btn btn-primary btn-large">
                        –ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É
                    </button>
                </form>
            </div>
        `;

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Ñ–æ—Ä–º–∏
        document.getElementById('developer-application-form').addEventListener('submit',
            (e) => this.submitApplication(e));
    },

    // –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏
    async submitApplication(event) {
        event.preventDefault();

        const specializations = Array.from(
            document.querySelectorAll('input[name="specialization"]:checked')
        ).map(cb => cb.value);

        if (specializations.length === 0) {
            this.app.tg.showAlert('–í–∏–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω—É —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é');
            return;
        }

        const applicationData = {
            company_name: document.getElementById('company_name').value || null,
            portfolio_url: document.getElementById('portfolio_url').value,
            description: document.getElementById('description').value,
            specialization: specializations,
            contact_email: document.getElementById('contact_email').value,
            contact_phone: document.getElementById('contact_phone').value || null,
            contact_telegram: document.getElementById('contact_telegram').value || null,
            accepted_terms: document.getElementById('accepted_terms').checked
        };

        try {
            const response = await this.app.api.post('/api/marketplace/apply', applicationData);

            if (response.success) {
                this.app.tg.showAlert('‚úÖ –ó–∞—è–≤–∫—É —É—Å–ø—ñ—à–Ω–æ –ø–æ–¥–∞–Ω–æ! –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥.');
                this.showPendingStatus(this.app);
            }
        } catch (error) {
            this.app.tg.showAlert(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
        }
    },

    // –°—Ç–∞—Ç—É—Å –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
    showPendingStatus(app) {
        const content = document.getElementById('app-content');

        content.innerHTML = `
            <div class="status-page pending">
                <div class="status-icon">‚è≥</div>
                <h1>–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥—ñ</h1>
                <p>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –ø–æ–¥–∞–Ω–∞ —Ç–∞ –æ—á—ñ–∫—É—î –Ω–∞ —Ä–æ–∑–≥–ª—è–¥ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.</p>
                <p>–ó–∞–∑–≤–∏—á–∞–π —Ü–µ –∑–∞–π–º–∞—î 1-3 —Ä–æ–±–æ—á—ñ –¥–Ω—ñ.</p>
                <button onclick="window.app.loadPage('profile')" class="btn btn-secondary">
                    –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é
                </button>
            </div>
        `;
    },

    // –°—Ç–∞—Ç—É—Å –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è
    showRejectedStatus(app, status) {
        const content = document.getElementById('app-content');

        content.innerHTML = `
            <div class="status-page rejected">
                <div class="status-icon">‚ùå</div>
                <h1>–ó–∞—è–≤–∫—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ</h1>
                <p>–ù–∞ –∂–∞–ª—å, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—É–ª–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∞.</p>
                ${status.rejection_reason ? `<p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${status.rejection_reason}</p>` : ''}
                <p>–í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∑–∞—è–≤–∫—É –ø—ñ—Å–ª—è —É—Å—É–Ω–µ–Ω–Ω—è –∑–∞—É–≤–∞–∂–µ–Ω—å.</p>
                <button onclick="MarketplaceModule.showApplicationForm(window.app)" class="btn btn-primary">
                    –ü–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∑–∞—è–≤–∫—É
                </button>
            </div>
        `;
    },

    // –ü–∞–Ω–µ–ª—å —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞
    showDeveloperDashboard(app) {
        const content = document.getElementById('app-content');

        content.innerHTML = `
            <div class="developer-dashboard">
                <div class="dashboard-header">
                    <h1>üë®‚Äçüíª –ö–∞–±—ñ–Ω–µ—Ç —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞</h1>
                    <div class="header-stats">
                        <div class="stat">
                            <span class="stat-value">$${this.developerProfile.balance.toFixed(2)}</span>
                            <span class="stat-label">–ë–∞–ª–∞–Ω—Å</span>
                        </div>
                        <div class="stat">
                            <span class="stat-value">${this.developerProfile.total_sales}</span>
                            <span class="stat-label">–ü—Ä–æ–¥–∞–∂—ñ–≤</span>
                        </div>
                        <div class="stat">
                            <span class="stat-value">‚≠ê ${this.developerProfile.average_rating.toFixed(1)}</span>
                            <span class="stat-label">–†–µ–π—Ç–∏–Ω–≥</span>
                        </div>
                    </div>
                </div>

                <div class="dashboard-tabs">
                    <button class="tab-btn active" onclick="MarketplaceModule.switchTab('overview')">
                        üìä –û–≥–ª—è–¥
                    </button>
                    <button class="tab-btn" onclick="MarketplaceModule.switchTab('products')">
                        üì¶ –ú–æ—ó —Ç–æ–≤–∞—Ä–∏
                    </button>
                    <button class="tab-btn" onclick="MarketplaceModule.switchTab('sales')">
                        üí∞ –ü—Ä–æ–¥–∞–∂—ñ
                    </button>
                    <button class="tab-btn" onclick="MarketplaceModule.switchTab('analytics')">
                        üìà –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞
                    </button>
                    <button class="tab-btn" onclick="MarketplaceModule.switchTab('finance')">
                        üí≥ –§—ñ–Ω–∞–Ω—Å–∏
                    </button>
                    <button class="tab-btn" onclick="MarketplaceModule.switchTab('settings')">
                        ‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
                    </button>
                </div>

                <div class="dashboard-content">
                    <div id="tab-content"></div>
                </div>
            </div>
        `;

        this.switchTab('overview');
    },

    // –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
    switchTab(tabName) {
        this.currentTab = tabName;

        // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –∫–Ω–æ–ø–∫—É
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        event?.target?.classList.add('active');

        const content = document.getElementById('tab-content');

        switch(tabName) {
            case 'overview':
                this.showOverview(content);
                break;
            case 'products':
                this.showProducts(content);
                break;
            case 'sales':
                this.showSales(content);
                break;
            case 'analytics':
                this.showAnalytics(content);
                break;
            case 'finance':
                this.showFinance(content);
                break;
            case 'settings':
                this.showDeveloperSettings(content);
                break;
        }
    },

    // –í–∫–ª–∞–¥–∫–∞: –û–≥–ª—è–¥
    async showOverview(container) {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ –¥–∞–Ω—ñ
        const balance = await this.app.api.get('/api/marketplace/balance');

        container.innerHTML = `
            <div class="overview-tab">
                <div class="quick-stats">
                    <div class="stat-card">
                        <h3>üí∞ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–∏–ø–ª–∞—Ç–∏</h3>
                        <div class="stat-value">${balance.balance.toFixed(2)}</div>
                        <button onclick="MarketplaceModule.requestWithdrawal()"
                                class="btn btn-primary"
                                ${balance.balance < 50 ? 'disabled' : ''}>
                            –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–ø–ª–∞—Ç—É
                        </button>
                    </div>

                    <div class="stat-card">
                        <h3>üìà –¶—å–æ–≥–æ –º—ñ—Å—è—Ü—è</h3>
                        <div class="stat-value">${(balance.total_earned / 12).toFixed(2)}</div>
                        <div class="stat-change positive">+15% vs –º–∏–Ω—É–ª–∏–π</div>
                    </div>

                    <div class="stat-card">
                        <h3>üì¶ –ê–∫—Ç–∏–≤–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</h3>
                        <div class="stat-value">${this.developerProfile.total_products}</div>
                        <a href="#" onclick="MarketplaceModule.switchTab('products')">–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è</a>
                    </div>
                </div>

                <div class="recent-activity">
                    <h2>–û—Å—Ç–∞–Ω–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó</h2>
                    <div class="transactions-list">
                        ${balance.recent_transactions.map(t => `
                            <div class="transaction-item">
                                <div class="transaction-icon">
                                    ${t.type === 'sale' ? 'üíµ' : t.type === 'withdrawal' ? 'üí≥' : 'üìä'}
                                </div>
                                <div class="transaction-info">
                                    <div class="transaction-description">${t.description}</div>
                                    <div class="transaction-date">${new Date(t.created_at).toLocaleDateString()}</div>
                                </div>
                                <div class="transaction-amount ${t.type === 'sale' ? 'positive' : 'negative'}">
                                    ${t.type === 'sale' ? '+' : '-'}${Math.abs(t.developer_amount || t.amount).toFixed(2)}
                                </div>
                            </div>
                        `).join('')}
                    </div>
                </div>
            </div>
        `;
    },

    // –í–∫–ª–∞–¥–∫–∞: –ú–æ—ó —Ç–æ–≤–∞—Ä–∏
    async showProducts(container) {
        const products = await this.app.api.get('/api/marketplace/products');

        container.innerHTML = `
            <div class="products-tab">
                <div class="products-header">
                    <h2>–ú–æ—ó —Ç–æ–≤–∞—Ä–∏</h2>
                    <button onclick="MarketplaceModule.showCreateProduct()" class="btn btn-primary">
                        ‚ûï –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä
                    </button>
                </div>

                <div class="products-grid">
                    ${products.length === 0 ? `
                        <div class="empty-state">
                            <p>–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤</p>
                            <button onclick="MarketplaceModule.showCreateProduct()" class="btn btn-primary">
                                –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—à–∏–π —Ç–æ–≤–∞—Ä
                            </button>
                        </div>
                    ` : products.map(p => `
                        <div class="product-card">
                            <div class="product-status status-${p.status}">
                                ${this.getStatusLabel(p.status)}
                            </div>
                            <h3>${p.title.ua || p.title.en}</h3>
                            <div class="product-meta">
                                <span>üí∞ ${p.price}</span>
                                <span>üëÅÔ∏è ${p.view_count}</span>
                                <span>üíµ ${p.sale_count} –ø—Ä–æ–¥–∞–∂—ñ–≤</span>
                            </div>
                            <div class="product-revenue">
                                –î–æ—Ö—ñ–¥: ${p.revenue.toFixed(2)}
                            </div>
                            <div class="product-actions">
                                <button onclick="MarketplaceModule.editProduct(${p.id})" class="btn btn-secondary">
                                    ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                                </button>
                                ${p.status === 'draft' || p.status === 'rejected' ? `
                                    <button onclick="MarketplaceModule.submitForReview(${p.id})" class="btn btn-primary">
                                        üì§ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é
                                    </button>
                                ` : ''}
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        `;
    },

    // –í–∫–ª–∞–¥–∫–∞: –ü—Ä–æ–¥–∞–∂—ñ
    async showSales(container) {
        container.innerHTML = `
            <div class="sales-tab">
                <h2>–Ü—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ–¥–∞–∂—ñ–≤</h2>

                <div class="sales-filters">
                    <select id="sales-period">
                        <option value="7">–û—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤</option>
                        <option value="30" selected>–û—Å—Ç–∞–Ω–Ω—ñ 30 –¥–Ω—ñ–≤</option>
                        <option value="90">–û—Å—Ç–∞–Ω–Ω—ñ 90 –¥–Ω—ñ–≤</option>
                        <option value="365">–û—Å—Ç–∞–Ω–Ω—ñ–π —Ä—ñ–∫</option>
                    </select>

                    <button onclick="MarketplaceModule.exportSales()" class="btn btn-secondary">
                        üì• –ï–∫—Å–ø–æ—Ä—Ç CSV
                    </button>
                </div>

                <div class="sales-table">
                    <table>
                        <thead>
                            <tr>
                                <th>–î–∞—Ç–∞</th>
                                <th>–¢–æ–≤–∞—Ä</th>
                                <th>–ü–æ–∫—É–ø–µ—Ü—å</th>
                                <th>–°—É–º–∞</th>
                                <th>–ö–æ–º—ñ—Å—ñ—è</th>
                                <th>–í–∞—à –¥–æ—Ö—ñ–¥</th>
                            </tr>
                        </thead>
                        <tbody id="sales-tbody">
                            <!-- –¢—É—Ç –±—É–¥—É—Ç—å –ø—Ä–æ–¥–∞–∂—ñ -->
                        </tbody>
                    </table>
                </div>
            </div>
        `;

        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ–¥–∞–∂—ñ–≤
        this.loadSalesData();
    },

    // –í–∫–ª–∞–¥–∫–∞: –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞
    showAnalytics(container) {
        container.innerHTML = `
            <div class="analytics-tab">
                <h2>–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂—ñ–≤</h2>

                <div class="analytics-charts">
                    <div class="chart-container">
                        <h3>–ü—Ä–æ–¥–∞–∂—ñ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 30 –¥–Ω—ñ–≤</h3>
                        <canvas id="sales-chart"></canvas>
                    </div>

                    <div class="chart-container">
                        <h3>–¢–æ–ø —Ç–æ–≤–∞—Ä–∏</h3>
                        <canvas id="products-chart"></canvas>
                    </div>

                    <div class="chart-container">
                        <h3>–î–∂–µ—Ä–µ–ª–∞ —Ç—Ä–∞—Ñ—ñ–∫—É</h3>
                        <canvas id="traffic-chart"></canvas>
                    </div>

                    <div class="chart-container">
                        <h3>–ö–æ–Ω–≤–µ—Ä—Å—ñ—è</h3>
                        <div class="conversion-funnel">
                            <div class="funnel-step">
                                <div class="funnel-bar" style="width: 100%">
                                    <span>–ü–µ—Ä–µ–≥–ª—è–¥–∏: 1,234</span>
                                </div>
                            </div>
                            <div class="funnel-step">
                                <div class="funnel-bar" style="width: 60%">
                                    <span>–î–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫: 741</span>
                                </div>
                            </div>
                            <div class="funnel-step">
                                <div class="funnel-bar" style="width: 30%">
                                    <span>–ü–æ–∫—É–ø–∫–∏: 370</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    },

    // –í–∫–ª–∞–¥–∫–∞: –§—ñ–Ω–∞–Ω—Å–∏
    async showFinance(container) {
        const balance = await this.app.api.get('/api/marketplace/balance');

        container.innerHTML = `
            <div class="finance-tab">
                <h2>–§—ñ–Ω–∞–Ω—Å–∏ —Ç–∞ –≤–∏–ø–ª–∞—Ç–∏</h2>

                <div class="balance-card">
                    <h3>–ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å</h3>
                    <div class="balance-amount">${balance.balance.toFixed(2)}</div>

                    <div class="balance-details">
                        <div class="detail-item">
                            <span>–ó–∞–≥–∞–ª—å–Ω–∏–π –¥–æ—Ö—ñ–¥:</span>
                            <span>${balance.total_earned.toFixed(2)}</span>
                        </div>
                        <div class="detail-item">
                            <span>–í–∏–ø–ª–∞—á–µ–Ω–æ:</span>
                            <span>${balance.total_withdrawn.toFixed(2)}</span>
                        </div>
                        <div class="detail-item">
                            <span>–ö–æ–º—ñ—Å—ñ—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏:</span>
                            <span>${(balance.commission_rate * 100).toFixed(0)}%</span>
                        </div>
                    </div>

                    <button onclick="MarketplaceModule.showWithdrawalForm()"
                            class="btn btn-primary btn-large"
                            ${balance.balance < 50 ? 'disabled' : ''}>
                        üí≥ –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–ø–ª–∞—Ç—É
                    </button>

                    ${balance.balance < 50 ? `
                        <p class="min-withdrawal-notice">
                            –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –¥–ª—è –≤–∏–ø–ª–∞—Ç–∏: $50
                        </p>
                    ` : ''}
                </div>

                <div class="withdrawal-history">
                    <h3>–Ü—Å—Ç–æ—Ä—ñ—è –≤–∏–ø–ª–∞—Ç</h3>
                    <div id="withdrawals-list">
                        <!-- –¢—É—Ç –±—É–¥—É—Ç—å –≤–∏–ø–ª–∞—Ç–∏ -->
                    </div>
                </div>
            </div>
        `;
    },

    // –§–æ—Ä–º–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
    showCreateProduct() {
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-overlay" onclick="this.parentElement.remove()"></div>
            <div class="modal-content">
                <h2>–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä—É</h2>

                <form id="create-product-form">
                    <div class="form-group">
                        <label>–ö–æ–¥ —Ç–æ–≤–∞—Ä—É *</label>
                        <input type="text" id="product_code" required placeholder="unique_code_123">
                    </div>

                    <div class="form-group">
                        <label>–ù–∞–∑–≤–∞ (UA) *</label>
                        <input type="text" id="title_ua" required placeholder="–ù–∞–∑–≤–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é">
                    </div>

                    <div class="form-group">
                        <label>–ù–∞–∑–≤–∞ (EN) *</label>
                        <input type="text" id="title_en" required placeholder="Title in English">
                    </div>

                    <div class="form-group">
                        <label>–û–ø–∏—Å (UA) *</label>
                        <textarea id="description_ua" required rows="4"></textarea>
                    </div>

                    <div class="form-group">
                        <label>–û–ø–∏—Å (EN) *</label>
                        <textarea id="description_en" required rows="4"></textarea>
                    </div>

                    <div class="form-group">
                        <label>–¶—ñ–Ω–∞ ($) *</label>
                        <input type="number" id="price" required min="1" step="0.01">
                    </div>

                    <div class="form-group">
                        <label>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è *</label>
                        <select id="category" required>
                            <option value="">–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é</option>
                            <option value="Architecture">–ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞</option>
                            <option value="Furniture">–ú–µ–±–ª—ñ</option>
                            <option value="Plumbing">–°–∞–Ω—Ç–µ—Ö–Ω—ñ–∫–∞</option>
                            <option value="Electrical">–ï–ª–µ–∫—Ç—Ä–∏–∫–∞</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∫–æ–º—É)</label>
                        <input type="text" id="tags" placeholder="revit, family, furniture">
                    </div>

                    <div class="form-group">
                        <label>–í–µ—Ä—Å—ñ—è</label>
                        <input type="text" id="version" value="1.0.0">
                    </div>

                    <div class="modal-actions">
                        <button type="button" onclick="this.closest('.modal').remove()" class="btn btn-secondary">
                            –°–∫–∞—Å—É–≤–∞—Ç–∏
                        </button>
                        <button type="submit" class="btn btn-primary">
                            –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä
                        </button>
                    </div>
                </form>
            </div>
        `;

        document.body.appendChild(modal);

        document.getElementById('create-product-form').addEventListener('submit',
            async (e) => {
                e.preventDefault();
                await this.createProduct();
            });
    },

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É
    async createProduct() {
        const productData = {
            code: document.getElementById('product_code').value,
            title: {
                ua: document.getElementById('title_ua').value,
                en: document.getElementById('title_en').value
            },
            description: {
                ua: document.getElementById('description_ua').value,
                en: document.getElementById('description_en').value
            },
            price: parseFloat(document.getElementById('price').value),
            category: document.getElementById('category').value,
            tags: document.getElementById('tags').value.split(',').map(t => t.trim()),
            version: document.getElementById('version').value
        };

        try {
            const response = await this.app.api.post('/api/marketplace/products', productData);

            if (response.success) {
                this.app.tg.showAlert('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!');
                document.querySelector('.modal').remove();
                this.showProducts(document.getElementById('tab-content'));
            }
        } catch (error) {
            this.app.tg.showAlert(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
        }
    },

    // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é
    async submitForReview(productId) {
        if (!confirm('–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ç–æ–≤–∞—Ä –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é?')) return;

        try {
            const response = await this.app.api.post(`/api/marketplace/products/${productId}/submit`);

            if (response.success) {
                this.app.tg.showAlert('‚úÖ –¢–æ–≤–∞—Ä –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é');
                this.showProducts(document.getElementById('tab-content'));
            }
        } catch (error) {
            this.app.tg.showAlert(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
        }
    },

    // –§–æ—Ä–º–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ –≤–∏–ø–ª–∞—Ç—É
    showWithdrawalForm() {
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-overlay" onclick="this.parentElement.remove()"></div>
            <div class="modal-content">
                <h2>üí≥ –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–ø–ª–∞—Ç—É</h2>

                <form id="withdrawal-form">
                    <div class="form-group">
                        <label>–°—É–º–∞ –¥–ª—è –≤–∏–ø–ª–∞—Ç–∏ ($)</label>
                        <input type="number" id="withdrawal_amount" required min="50" step="0.01"
                               max="${this.developerProfile.balance}">
                        <small>–î–æ—Å—Ç—É–ø–Ω–æ: ${this.developerProfile.balance.toFixed(2)}</small>
                    </div>

                    <div class="form-group">
                        <label>–ú–µ—Ç–æ–¥ –≤–∏–ø–ª–∞—Ç–∏</label>
                        <select id="payment_method" required onchange="MarketplaceModule.updatePaymentFields(this.value)">
                            <option value="">–í–∏–±–µ—Ä—ñ—Ç—å –º–µ—Ç–æ–¥</option>
                            <option value="crypto">–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ (USDT)</option>
                            <option value="bank">–ë–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π –ø–µ—Ä–µ–∫–∞–∑</option>
                            <option value="paypal">PayPal</option>
                        </select>
                    </div>

                    <div id="payment-fields"></div>

                    <div class="modal-actions">
                        <button type="button" onclick="this.closest('.modal').remove()" class="btn btn-secondary">
                            –°–∫–∞—Å—É–≤–∞—Ç–∏
                        </button>
                        <button type="submit" class="btn btn-primary">
                            –ü–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç
                        </button>
                    </div>
                </form>
            </div>
        `;

        document.body.appendChild(modal);

        document.getElementById('withdrawal-form').addEventListener('submit',
            async (e) => {
                e.preventDefault();
                await this.requestWithdrawal();
            });
    },

    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ –ø–ª–∞—Ç–µ–∂—É
    updatePaymentFields(method) {
        const container = document.getElementById('payment-fields');

        switch(method) {
            case 'crypto':
                container.innerHTML = `
                    <div class="form-group">
                        <label>USDT –∞–¥—Ä–µ—Å–∞ (TRC20)</label>
                        <input type="text" id="crypto_address" required placeholder="TXxx...">
                    </div>
                `;
                break;
            case 'bank':
                container.innerHTML = `
                    <div class="form-group">
                        <label>IBAN</label>
                        <input type="text" id="iban" required placeholder="UA...">
                    </div>
                    <div class="form-group">
                        <label>–û—Ç—Ä–∏–º—É–≤–∞—á</label>
                        <input type="text" id="recipient_name" required>
                    </div>
                `;
                break;
            case 'paypal':
                container.innerHTML = `
                    <div class="form-group">
                        <label>PayPal Email</label>
                        <input type="email" id="paypal_email" required>
                    </div>
                `;
                break;
        }
    },

    // –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–ø–ª–∞—Ç—É
    async requestWithdrawal() {
        const amount = parseFloat(document.getElementById('withdrawal_amount').value);
        const method = document.getElementById('payment_method').value;

        let paymentDetails = {};

        switch(method) {
            case 'crypto':
                paymentDetails.address = document.getElementById('crypto_address').value;
                break;
            case 'bank':
                paymentDetails.iban = document.getElementById('iban').value;
                paymentDetails.recipient = document.getElementById('recipient_name').value;
                break;
            case 'paypal':
                paymentDetails.email = document.getElementById('paypal_email').value;
                break;
        }

        try {
            const response = await this.app.api.post('/api/marketplace/withdraw', {
                amount: amount,
                payment_method: method,
                payment_details: paymentDetails
            });

            if (response.success) {
                this.app.tg.showAlert('‚úÖ –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–ø–ª–∞—Ç—É —É—Å–ø—ñ—à–Ω–æ –ø–æ–¥–∞–Ω–æ!');
                document.querySelector('.modal').remove();
                this.showFinance(document.getElementById('tab-content'));
            }
        } catch (error) {
            this.app.tg.showAlert(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
        }
    },

    // –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
    getStatusLabel(status) {
        const labels = {
            'draft': 'üìù –ß–µ—Ä–Ω–µ—Ç–∫–∞',
            'pending_review': '‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó',
            'approved': '‚úÖ –ê–∫—Ç–∏–≤–Ω–∏–π',
            'rejected': '‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ',
            'suspended': '‚ö†Ô∏è –ü—Ä–∏–∑—É–ø–∏–Ω–µ–Ω–æ'
        };
        return labels[status] || status;
    }
};